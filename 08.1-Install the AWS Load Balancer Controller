
# Installing AWS ALB Ingress Controller in EKS Cluster

This guide explains how to install and configure the AWS ALB Ingress Controller in your EKS cluster using Helm.

## Prerequisites
- An existing EKS cluster.
- Helm installed on your local machine.
- AWS credentials properly configured.

## Installation Steps

### 1. Add Helm Repository

Run the following command to add the AWS Helm repository and update it:

```
helm repo add eks https://aws.github.io/eks-charts
helm repo update
```

### 2. Create an IAM OIDC Provider (if not already created)

Run this command to associate an IAM OIDC provider with your cluster:

```
eksctl utils associate-iam-oidc-provider --region <your-region> --cluster <your-cluster-name> --approve
```

### 3. Create an IAM Policy

Download the necessary IAM policy and create it in your AWS account:

```
curl -o iam_policy.json https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/main/docs/install/iam_policy.json
aws iam create-policy --policy-name AWSLoadBalancerControllerIAMPolicy --policy-document file://iam_policy.json
```

### 4. Create an IAM Role

Create an IAM role and attach the policy for the ALB Ingress controller:

```
eksctl create iamserviceaccount \
  --cluster=<your-cluster-name> \
  --namespace=kube-system \
  --name=aws-load-balancer-controller \
  --attach-policy-arn=arn:aws:iam::<account-id>:policy/AWSLoadBalancerControllerIAMPolicy \
  --approve
```

### 5. Install AWS Load Balancer Controller via Helm

Now, install the controller using Helm:

```
helm install aws-load-balancer-controller eks/aws-load-balancer-controller \
  --set clusterName=<your-cluster-name> \
  --set serviceAccount.create=false \
  --set region=<your-region> \
  --set vpcId=<your-vpc-id> \
  --set serviceAccount.name=aws-load-balancer-controller \
  -n kube-system
```

### 6. Verify the Installation

Ensure the controller is running successfully:

```
kubectl get deployment -n kube-system aws-load-balancer-controller
```

## ALB Creation

After deploying the AWS ALB Ingress controller, you may not immediately see an Application Load Balancer (ALB) in your AWS account. The ALB will only be created when a Kubernetes Ingress resource is applied to the cluster.

Follow these steps to create and verify the Ingress resource.

### 1. Create an Ingress Resource

Create a Kubernetes Ingress resource that triggers the controller to create an ALB:

```yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/target-type: instance
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: my-service
                port:
                  number: 80
```

Replace `my-service` with your actual service name.

### 2. Apply the Ingress Resource

Apply the resource to your cluster:

```
kubectl apply -f ingress.yaml
```

### 3. Verify ALB Creation

Check if the ALB is created:

```
kubectl get ingress my-ingress -o wide
```

### 4. Check the AWS Console

Go to the **EC2 > Load Balancers** section in the AWS Management Console. The ALB should be visible after a few minutes.

